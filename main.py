from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message
import asyncio
import keyboard as kb

from config import token

bot = Bot(token=token)
dp = Dispatcher()

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(f'Приветствую вас {message.from_user.first_name}!\nЯ ваш бот проводник, если хотите узнать какую либо информацию то она имеется у вас в области клавиатуры и удачи в познании мира программирования!', reply_markup=kb.main)

@dp.message(F.text == 'О нас')
async def about(message: Message):
    await message.answer('Мы создаем экосистему для обучения, работы и творчества IT-специалистов История создания Международная IT-академия Geeks (Гикс) был основан Fullstack-разработчиком Айдаром Бакировым и Android-разработчиком Нургазы Сулаймановым в 2018-ом году в Бишкеке с целью дать возможность каждому человеку, даже без опыта в технологиях, гарантированно освоить IT-профессию. На сегодняшний день более 1200 студентов в возрасте от 12 до 45 лет изучают здесь самые популярные и востребованные IT-профессии. Филиальная сеть образовательного центра представлена в таких городах, как Бишкек, Ош, Ташкент и Кара-Балта.')
    
@dp.message(F.text == 'Направления')
async def direction(message: Message):
    await message.answer('У нас имеются 3 направление по кнопкам ниже', reply_markup=kb.setting)
    
@dp.message(F.text == 'Контакты')
async def contacts(message: Message):
    await message.answer('@geeks_osh\n+996 559 006484\nБексултан Сулайманов')
    
@dp.callback_query(F.data == 'backend_info')
async def backend_info(query):
    await query.message.answer('''```Backend — это часть работы веб-сайтов и приложений, которая не видна пользователю, но без которой они не могли бы существовать. Можно представить себе веб-сайт как дом: frontend — это всё, что ты видишь и с чем взаимодействуешь (дизайн, кнопки, картинки), а backend — это фундамент, стены и трубы, которые поддерживают этот дом, но скрыты от глаз.

В backend работают серверы, базы данных и вся логика, которая обрабатывает запросы от пользователей. Например, когда ты заходишь на сайт и видишь список товаров, backend помогает найти эти товары в базе данных и показать их на экране. Или когда ты отправляешь сообщение в чат — backend обрабатывает это сообщение и сохраняет его в базе данных, чтобы другие могли его увидеть.

Backend-разработчики пишут код, который решает, как обрабатывать данные, работать с базами данных, взаимодействовать с другими сервисами и отвечать на запросы пользователей.```

```Стоимость - курса начинается от 10.000 сомов но если вы будете успевать писать #StandUp и вовремя выполнять домашнее задания и писать тесты на высокие баллы то сможете заработать скидку 2000 сомов```

```Ваше познавательное обучение будет длится 5 месяцев желаем удачи!```''')

@dp.callback_query(F.data == 'frontend_info')
async def frontend_info(query):
    await query.message.answer('''```Frontend — это часть веб-сайта или приложения, с которой взаимодействует пользователь. Это всё, что ты видишь на экране: дизайн, текст, кнопки, изображения, анимации и т. д. Frontend — как внешняя оболочка, которая делает сайт удобным и красивым для использования.

Если представить веб-сайт как кафе, то frontend — это интерьер: столы, стулья, меню, освещение — всё, что ты можешь увидеть и что помогает тебе чувствовать себя комфортно и понимать, как использовать кафе. Ты не видишь, как кафе управляет заказами или хранит еду на кухне, но всё это влияет на твой опыт. Это как раз и делает backend.

Frontend-разработчики занимаются созданием этой оболочки с помощью языков программирования, таких как HTML (для структуры), CSS (для стиля и оформления) и JavaScript (для интерактивности, например, чтобы кнопки работали).```

```Стоимость - курса начинается от 10.000 сомов но если вы будете успевать писать #StandUp и вовремя выполнять домашнее задания и писать тесты на высокие баллы то сможете заработать скидку 2000 сомов```

```Ваше познавательное обучение будет длится 5 месяцев желаем удачи!```''')

@dp.callback_query(F.data == 'ux_ui_info')
async def ux_ui_info(query):
    await query.message.answer('''```UX (User Experience) — опыт пользователя
UX — это всё, что связано с тем, как человек чувствует себя при взаимодействии с продуктом или услугой. UX-дизайн фокусируется на удобстве и эффективности использования сайта или приложения. Задача UX-дизайнера — сделать так, чтобы пользователю было легко и приятно работать с продуктом.

Пример UX:

Если ты заходишь на сайт и сразу понимаешь, где найти информацию или как сделать покупку, это хорошая работа UX-дизайнера.
Если приложение быстро загружается и не требует лишних действий для выполнения задачи, это тоже часть хорошего UX.
Основная цель UX — улучшить удовлетворение пользователей. UX-дизайнеры часто исследуют, что именно людям нравится или не нравится в интерфейсе, и предлагают изменения, чтобы улучшить взаимодействие.

UI (User Interface) — пользовательский интерфейс
UI — это внешний вид и взаимодействие с продуктом. Это всё, что пользователь видит на экране: кнопки, меню, поля для ввода, иконки, шрифты, цвета и т. д. UI-дизайнеры создают визуальные элементы интерфейса, чтобы он был привлекательным и интуитивно понятным.

Пример UI:

Кнопка с ярким и контрастным цветом, которая ясно говорит, что на неё можно нажать.
Поле для ввода, которое выглядит аккуратно и удобно для пользователя.
Основная цель UI — создать красивый и функциональный интерфейс, который делает использование сайта или приложения интуитивно понятным.

Как UX и UI работают вместе?
UX отвечает за то, чтобы пользователь понимал, как использовать продукт и чтобы его опыт был удобным.
UI отвечает за то, чтобы интерфейс был красивым и понятным.
Пример: Если ты используешь мобильное приложение для заказа еды, UX будет отвечать за то, чтобы путь от выбора блюда до оформления заказа был логичным и простым. UI же будет создавать визуальную составляющую этого процесса: как будут выглядеть кнопки, меню и текст.```

```Стоимость - курса начинается от 10.000 сомов но если вы будете успевать писать #StandUp и вовремя выполнять домашнее задания и писать тесты на высокие баллы то сможете заработать скидку 2000 сомов```

```Ваше познавательное обучение будет длится 3 месяцев желаем удачи!```''')

async def main():
    await dp.start_polling(bot)

try:
    asyncio.run(main())
except KeyboardInterrupt:
    print("Вы отключились от бота!")
